@using Stockly.Services
@inject UserStateService UserState
@inject NavigationManager Navigation
@inject DrawerService DrawerService

<MudNavMenu>
    <!-- Home - Available to all authenticated users -->
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Home">Home</MudNavLink>
    
    <!-- Admin View - Only for admin role -->
    @if (UserState.Role == "admin")
    {
        <MudNavLink Href="AdminView" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.SupervisedUserCircle">Admin</MudNavLink>
    }
    
    <!-- Opening Inventory - Only for opening and admin roles -->
    @if (UserState.Role == "opening" || UserState.Role == "admin")
    {
        <MudNavLink Href="OpeningInventory" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.LockOpen">Opening Shift</MudNavLink>
    }
    
    <!-- Closing Inventory - Only for closing and admin roles -->
    @if (UserState.Role == "closing" || UserState.Role == "admin")
    {
        <MudNavLink Href="ClosingInventory" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Lock">Closing Shift</MudNavLink>
    }
    
    <!-- Products - Available to all authenticated users -->
    <MudNavLink Href="Products" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.List">Products</MudNavLink>
    
    <div style="margin-top: auto;">
        @if (UserState.IsAuthenticated)
        {
            @if (!showLogoutConfirm)
            {
                <MudNavLink OnClick="HandleLogout" Icon="@Icons.Material.Outlined.Logout">Logout</MudNavLink>
            }
            else
            {
                <div class="pa-3">
                    <MudText Typo="Typo.body2" Color="Color.Warning" Class="mb-2 d-flex align-center">
                        <MudIcon Icon="@Icons.Material.Filled.Warning" Class="mr-2" />
                        Are you sure?
                    </MudText>
                    <div class="d-flex gap-1">
                        <MudButton OnClick="CancelLogout" Color="Color.Secondary" Variant="Variant.Outlined" Size="Size.Small" FullWidth="true">Cancel</MudButton>
                        <MudButton OnClick="ConfirmLogout" Color="Color.Error" Variant="Variant.Filled" Size="Size.Small" FullWidth="true">Logout</MudButton>
                    </div>
                </div>
            }
        }
        else
        {
            <MudNavLink Href="Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.Login">Login</MudNavLink>
        }
    </div>
</MudNavMenu>

<style>
    .mud-navmenu {
        display: flex;
        flex-direction: column;
        height: 100%;
    }
</style>

@code {
    protected override void OnInitialized()
    {
        UserState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        UserState.OnChange -= StateHasChanged;
    }

    private bool showLogoutConfirm = false;
    
    private void HandleLogout()
    {
        showLogoutConfirm = true;
    }
    
    private async Task ConfirmLogout()
    {
        showLogoutConfirm = false;
        await UserState.LogoutAsync();
        DrawerService.Close();
        Navigation.NavigateTo("/Login");
    }
    
    private void CancelLogout()
    {
        showLogoutConfirm = false;
    }
}